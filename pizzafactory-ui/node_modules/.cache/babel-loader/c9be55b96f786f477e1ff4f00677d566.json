{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderServices from '../services/order-services';\nimport MenuServices from '../services/menu-services';\nimport pic from '../assets/special-offer.png';\nexport default {\n  name: 'OrderView',\n  created: function created() {\n    this.fetchMenusItem();\n  },\n  data: function data() {\n    return {\n      pic: pic,\n      menuItem: '',\n      email: '',\n      quantity: 1,\n      menu: [],\n      isSuccess: false,\n      dismissCountDown: 7\n    };\n  },\n  methods: {\n    persistOrder: function persistOrder() {\n      OrderServices.persistOrder(this.menuItem, this.email, this.quantity).then(this.isSuccess = true, function (response) {\n        console.log(response);\n      }).catch(function (exception) {\n        console.log(exception);\n      });\n    },\n    fetchMenusItem: function fetchMenusItem() {\n      var _this = this;\n\n      MenuServices.fetchMenusItem().then(function (response) {\n        _this.menu = response.data;\n        console.log(response);\n      });\n    },\n    onReset: function onReset() {\n      this.email = '';\n      this.quantity = 1;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AAEA;EACAA,iBADA;EAEAC,OAFA,qBAEA;IACA;EACA,CAJA;EAKAC,IALA,kBAKA;IACA;MACAC,QADA;MAEAC,YAFA;MAGAC,SAHA;MAIAC,WAJA;MAKAC,QALA;MAMAC,gBANA;MAOAC;IAPA;EASA,CAfA;EAgBAC;IACAC,YADA,0BACA;MACAC,2BACA,aADA,EAEA,UAFA,EAGA,aAHA,EAKAC,IALA,CAMA,qBANA,EAOA;QAAAC;MAAA,CAPA,EAQAC,KARA,CAQA;QAAAD;MAAA,CARA;IASA,CAXA;IAYAE,cAZA,4BAYA;MAAA;;MACAC,8BACAJ,IADA,CACA;QACA;QACAC;MACA,CAJA;IAKA,CAlBA;IAmBAI,OAnBA,qBAmBA;MACA;MACA;IACA;EAtBA;AAhBA","names":["name","created","data","pic","menuItem","email","quantity","menu","isSuccess","dismissCountDown","methods","persistOrder","OrderServices","then","console","catch","fetchMenusItem","MenuServices","onReset"],"sourceRoot":"src/views","sources":["OrderView.vue"],"sourcesContent":["<template>\n  <div id=\"body\">\n    <b-card id=\"offer\" no-body class=\"overflow-hidden\" style=\"max-width: 540px;\">\n      <b-row no-gutters>\n        <b-col md=\"6\">\n          <b-card-img id=\"offer-image\" :src=\"pic\" alt=\"Image\" class=\"rounded-0\"></b-card-img>\n        </b-col>\n        <b-col md=\"6\">\n          <b-card-body title=\"SPECIAL OFFER!\">\n            <b-card-text id=\"offer-text\">\n              BUY NOW...<br>\n              ...PIZZA CHICKEN<br>\n              AND GET<br>\n              <b id=\"special-text\">2 FOR 1</b>\n            </b-card-text>\n          </b-card-body>\n        </b-col>\n      </b-row>\n    </b-card>\n\n    <b-alert\n      variant=\"success\"\n      v-if=\"isSuccess\"\n      :show=\"dismissCountDown\"\n    >\n      Order Created Successfully\n    </b-alert>\n\n    <b-form class=\"order-form\" @submit=\"persistOrder\" @reset=\"onReset\">\n      <h3 class=\"form-title\">Order</h3>\n        <b-form-group\n          id=\"input-group-email\"\n          label=\"Email address:\"\n          label-for=\"input-email\"\n        >\n          <b-form-input\n            id=\"input-email\"\n            v-model=\"email\"\n            type=\"email\"\n            placeholder=\"Enter email\"\n            required\n          ></b-form-input>\n        </b-form-group>\n\n        <div id=\"menu\">\n          <b-form-group\n            id=\"input-group-menu\"\n            label=\"Menu:\"\n            label-for=\"input-menu\">\n            <b-form-select\n              id=\"input-menu\"\n              v-model=menuItem\n              :options=menu\n              required\n            ></b-form-select>\n          </b-form-group>\n\n          <b-form-group\n            id=\"input-group-quantity\"\n            label=\"Quantity:\"\n            label-for=\"input-quantity\">\n            <b-form-spinbutton\n              id=\"input-quantity\"\n              v-model=quantity\n              min=\"1\"\n              max=\"20\"\n              required\n            ></b-form-spinbutton>\n          </b-form-group>\n        </div>\n\n      <div id=\"buttons\">\n      <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n      <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </div>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport OrderServices from '../services/order-services'\nimport MenuServices from '../services/menu-services'\nimport pic from '../assets/special-offer.png'\n\nexport default {\n  name: 'OrderView',\n  created () {\n    this.fetchMenusItem()\n  },\n  data () {\n    return {\n      pic: pic,\n      menuItem: '',\n      email: '',\n      quantity: 1,\n      menu: [],\n      isSuccess: false,\n      dismissCountDown: 7\n    }\n  },\n  methods: {\n    persistOrder () {\n      OrderServices.persistOrder(\n        this.menuItem,\n        this.email,\n        this.quantity\n      )\n        .then(\n          this.isSuccess = true,\n          response => { console.log(response) })\n        .catch((exception) => { console.log(exception) })\n    },\n    fetchMenusItem () {\n      MenuServices.fetchMenusItem()\n        .then(response => {\n          this.menu = response.data\n          console.log(response)\n        })\n    },\n    onReset () {\n      this.email = ''\n      this.quantity = 1\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n@import '../assets/styles/order.css';\n</style>\n"]},"metadata":{},"sourceType":"module"}