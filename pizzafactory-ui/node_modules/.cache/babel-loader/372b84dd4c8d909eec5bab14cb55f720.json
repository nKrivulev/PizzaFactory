{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport RegisterServices from '../services/register-services';\nexport default {\n  name: 'RegisterForm',\n\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      num: '',\n      address: '',\n      username: '',\n      password: '',\n      isSuccess: false,\n      dismissCountDown: 7\n    };\n  },\n\n  mounted() {\n    const multiStepForm = document.querySelector('[data-multi-step]');\n    const formSteps = [...multiStepForm.querySelectorAll('[data-step]')];\n    let currentStep = formSteps.findIndex(step => {\n      return step.classList.contains('active');\n    });\n\n    if (currentStep < 0) {\n      currentStep = 0;\n      showCurrentStep();\n    }\n\n    multiStepForm.addEventListener('click', e => {\n      const inputs = [...formSteps[currentStep].querySelectorAll('input')];\n      const allValid = inputs.every(input => input.reportValidity());\n\n      if (e.target.matches('[data-next]')) {\n        if (allValid) {\n          currentStep += 1;\n\n          if (currentStep > 2) {\n            currentStep = 0;\n          }\n\n          showCurrentStep();\n        }\n      } else if (e.target.matches('[data-previous]')) {\n        currentStep -= 1;\n        showCurrentStep();\n      }\n    });\n    formSteps.forEach(step => {\n      step.addEventListener('animationend', e => {\n        formSteps[currentStep].classList.remove('hide');\n        e.target.classList.toggle('hide', !e.target.classList.contains('active'));\n      });\n    });\n\n    function showCurrentStep() {\n      formSteps.forEach((step, index) => {\n        step.classList.toggle('active', index === currentStep);\n      });\n    }\n  },\n\n  methods: {\n    persistClient() {\n      RegisterServices.persistClient(this.firstName, this.lastName, this.email, this.num, this.address, this.username, this.password).then(this.isSuccess = true, response => console.log(response)).catch(exception => console.log(exception));\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AAEA;EACAA,oBADA;;EAEAC;IACA;MACAC,aADA;MAEAC,YAFA;MAGAC,SAHA;MAIAC,OAJA;MAKAC,WALA;MAMAC,YANA;MAOAC,YAPA;MAQAC,gBARA;MASAC;IATA;EAWA,CAdA;;EAeAC;IACA;IACA;IACA;MACA;IACA,CAFA;;IAIA;MACAC;MACAC;IACA;;IAEAC;MACA;MACA;;MAEA;QACA;UACAF;;UACA;YACAA;UACA;;UACAC;QACA;MACA,CARA,MAQA;QACAD;QACAC;MACA;IACA,CAhBA;IAkBAE;MACAC;QACAD;QACAE;MACA,CAHA;IAIA,CALA;;IAOA;MACAF;QACAC;MACA,CAFA;IAGA;EACA,CAzDA;;EA0DAE;IACAC;MACAC,+BACA,cADA,EAEA,aAFA,EAGA,UAHA,EAIA,QAJA,EAKA,YALA,EAMA,aANA,EAOA,aAPA,EASAC,IATA,CAUA,qBAVA,EAWAC,iCAXA,EAaAC,KAbA,CAaAC,mCAbA;IAcA;;EAhBA;AA1DA","names":["name","data","firstName","lastName","email","num","address","username","password","isSuccess","dismissCountDown","mounted","currentStep","showCurrentStep","multiStepForm","formSteps","step","e","methods","persistClient","RegisterServices","then","response","catch","exception"],"sourceRoot":"src/components","sources":["RegisterForm.vue"],"sourcesContent":["<template>\n  <div class=\"register\">\n    <p class=\"animated-header\" data-text=\"Welcome...!\">Welcome...!</p>\n    <b-alert\n      variant=\"success\"\n      v-if=\"isSuccess\"\n      :show=\"dismissCountDown\"\n    >\n      Profile Created Successfully\n    </b-alert>\n    <form class=\"multi-step-form\" data-multi-step>\n      <div class=\"form active\" data-step>\n        <h3 class=\"step-title\">Account Details</h3>\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" required name=\"email\" id=\"email\" v-model=\"email\" placeholder=\"Enter email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"username\">Username</label>\n          <input type=\"text\" required name=\"username\" id=\"username\" v-model=\"username\" placeholder=\"Enter username\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" required name=\"password\" id=\"password\" v-model=\"password\" placeholder=\"Enter password\">\n        </div>\n        <div class=\"form-buttons\" style=\"align-self: center\">\n          <b-button variant=\"success\" type=\"button\" data-next>Next</b-button>\n        </div>\n      </div>\n      <div class=\"form\" data-step>\n        <h3 class=\"step-title\">Contacts</h3>\n        <div class=\"form-group\">\n          <label for=\"address\">Address</label>\n          <input type=\"text\" required name=\"address\" id=\"address\" v-model=\"address\" placeholder=\"Enter address\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"number\">Number</label>\n          <input type=\"tel\" required name=\"number\" id=\"number\" v-model=\"num\" placeholder=\"Enter number\">\n        </div>\n        <div class=\"form-buttons\">\n         <b-button variant=\"success\" type=\"button\" data-previous>Previous</b-button>\n         <b-button variant=\"success\" type=\"button\" data-next>Next</b-button>\n        </div>\n      </div>\n      <div class=\"form\" data-step>\n        <h3 class=\"step-title\">Profile Names</h3>\n        <div class=\"form-group\">\n          <label for=\"firstName\">First Name</label>\n          <input type=\"text\" required name=\"firstName\" id=\"firstName\" v-model=\"firstName\" placeholder=\"Enter First Name\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"lastName\">Last Name</label>\n          <input type=\"text\" required name=\"lastName\" id=\"lastName\" v-model=\"lastName\" placeholder=\"Enter Last Name\">\n        </div>\n        <div class=\"form-buttons\">\n         <b-button variant=\"success\" type=\"button\" data-previous>Previous</b-button>\n         <b-button variant=\"success\" type=\"submit\" v-on:click=\"persistClient\" data-next>Submit</b-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport RegisterServices from '../services/register-services'\n\nexport default {\n  name: 'RegisterForm',\n  data () {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      num: '',\n      address: '',\n      username: '',\n      password: '',\n      isSuccess: false,\n      dismissCountDown: 7\n    }\n  },\n  mounted () {\n    const multiStepForm = document.querySelector('[data-multi-step]')\n    const formSteps = [...multiStepForm.querySelectorAll('[data-step]')]\n    let currentStep = formSteps.findIndex(step => {\n      return step.classList.contains('active')\n    })\n\n    if (currentStep < 0) {\n      currentStep = 0\n      showCurrentStep()\n    }\n\n    multiStepForm.addEventListener('click', e => {\n      const inputs = [...formSteps[currentStep].querySelectorAll('input')]\n      const allValid = inputs.every(input => input.reportValidity())\n\n      if (e.target.matches('[data-next]')) {\n        if (allValid) {\n          currentStep += 1\n          if (currentStep > 2) {\n            currentStep = 0\n          }\n          showCurrentStep()\n        }\n      } else if (e.target.matches('[data-previous]')) {\n        currentStep -= 1\n        showCurrentStep()\n      }\n    })\n\n    formSteps.forEach(step => {\n      step.addEventListener('animationend', e => {\n        formSteps[currentStep].classList.remove('hide')\n        e.target.classList.toggle('hide', !e.target.classList.contains('active'))\n      })\n    })\n\n    function showCurrentStep () {\n      formSteps.forEach((step, index) => {\n        step.classList.toggle('active', index === currentStep)\n      })\n    }\n  },\n  methods: {\n    persistClient () {\n      RegisterServices.persistClient(\n        this.firstName,\n        this.lastName,\n        this.email,\n        this.num,\n        this.address,\n        this.username,\n        this.password\n      )\n        .then(\n          this.isSuccess = true,\n          response => console.log(response)\n        )\n        .catch((exception) => console.log(exception))\n    }\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n@import '../assets/styles/home.css';\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}